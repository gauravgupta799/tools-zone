@use './font' as *;
@use './colors' as *;

// ======== background cover =========
@mixin cover-background {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;
}

// ======== flex toolkit =========//
@mixin flex-column{
    display:flex;
    flex-direction: column;
}

@mixin flex-center{
    display:flex;
    justify-content: center;
    align-items:center;
}

@mixin flex-center-horizontal{
    display:flex;
    justify-content: center;
}

@mixin flex-center-vertical{
    display:flex;
    align-items:center;
}

@mixin flex-start-vertical{
    display:flex;
    align-items:flex-start;
}

@mixin flex-end-vertical{
    display:flex;
    align-items:flex-end;
}

@mixin flex-start-horizontal{
    display:flex;
    justify-content: flex-start;
}

@mixin flex-end-horizontal{
    display:flex;
    justify-content: flex-end;
}

@mixin flex-space-between{
    @include flex-center-vertical;
    justify-content: space-between;
}

@mixin center-through-position{
    position: absolute;
    top: 50%;
    left: 50%;
    @include transform(translate(-50%, -50%));
}

@mixin relative-hidden {
    position: relative;
    overflow: hidden;
}

// ======== pseudo ============= //
@mixin pseudo-cover{
    content: '';
    position:absolute;
    inset:0;
}

// ======== setting font for header and body ======= //
@mixin font-heading{
    font-family:$ff-primary;
    color:$clr-black;
}

@mixin font-body{
    font-family: $ff-regular;
    color:$clr-black;
}

@mixin full-dimensions{
    width: 100%;
    height: 100%;
}

@mixin dimensions($width, $height) {
    width: $width;
    height: $height;
}

@mixin border-radius($radius){
    @if $radius == "full"{
        border-radius:50%;
    } @else {
        border-radius:$radius;
    }
}

@mixin transition($property:all, $delay:0, $timing-func:ease){
    transition:$property $delay $timing-func;
}

@mixin transform($property){
    transform:$property;
}

@mixin animation($animation-name, $duration, $timing-function, $direction){
    animation:$animation-name $duration $timing-function $direction;
    -webkit-animation:$animation-name $duration $timing-function $direction;
}

@mixin keyframes($name) {
    @keyframes #{$name} {
      @content;
    }
}

// @mixin backgroundColor($red:0, $green:0, $blue:0, $alpha:1){
//     background:rgba($red, $green, $blue, $alpha);
// }


@mixin center-through-position{
    position: absolute;
    top: 50%;
    left: 50%;
    @include transform(translate(-50%, -50%));
}

@mixin link-hover-effect($primary-clr:$clr-white, $secondary-clr:$clr-secondary){
    background-image: linear-gradient(
        to right,
        $secondary-clr, 
        $secondary-clr 50%,
        $primary-clr 50%    
    );
    background-size: 200% 100%;
    background-position: 100%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    transition:background-position 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
}

// Caret Down
@mixin caret-down{
    content:"";
    position: absolute;
    right: 1rem;
    top: 55%;
    pointer-events: none;
    border-left: 0.35rem solid transparent;
    border-right: 0.35rem  solid transparent;
    border-top: 0.35rem solid $clr-black;
}


@mixin hover-effect($bg-color:$clr-secondary) {
    &::before{
        content:"";
        position: absolute;
        left: 0;
        bottom: 0;
        @include full-dimensions;
        background:$bg-color;
        z-index: -1;
        transform: translateX(-100%);
        transition: transform 0.3s ease-out;
        transform-origin: bottom;
    }
}

